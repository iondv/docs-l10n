# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, IONDV LLC
# This file is distributed under the same license as the IONDV docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
msgid ""
msgstr ""
"Project-Id-Version: IONDV docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-09-14 09:35+1000\n"
"PO-Revision-Date: 2020-05-27 03:43+0000\n"
"Last-Translator: Alena Kremenetskaya <alena.kremenetskaya@mail.ru>\n"
"Language: en\n"
"Language-Team: English <http://weblate.iondv.com/projects/docs/index/en/>"
"\n"
"Plural-Forms: nplurals=2; plural=n != 1\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../index.rst:9
msgid "Содержание:"
msgstr "Contents:"

#: ../../index.rst:7
msgid "Документация по платформе IONDV.Framework"
msgstr "Documentation for the IONDV.Framework platform"

#: ../../index.rst:77
msgid "This page in `English <https://iondv.readthedocs.io/en/latest>`_"
msgstr "Эта страница на `Русском <https://iondv.readthedocs.io/ru/latest>`_"

#: ../../index.rst:90
msgid "Описание"
msgstr "Description"

#: ../../index.rst:92
msgid ""
"IONDV. Framework - это опенсорный фреймворк на node.js для разработки "
"учетных приложений на основе метаданных в формате JSON/YAML и отдельных "
"функциональных модулей. Визуальный редактор `Studio "
"<https://studio.iondv.com>`_ позволяет создавать приложения по технологии"
" \"no code\" и собирать приложение с веб-сервисами REST-API (модуль `rest"
" <https://github.com/iondv/rest>`_). Ключевой модуль `registry "
"<https://github.com/iondv/registry>`_ является универсальным средством "
"представления и редактирования данных, обработки их по бизнес-процессам."
msgstr ""

#: ../../index.rst:98
msgid "На видео технология разработки и сборки приложения."
msgstr ""

#: ../../index.rst:108
msgid "Бесплатные демоверсии"
msgstr "Free Demos"

#: ../../index.rst:110
msgid "Посмотрите наши демо уже сейчас:"
msgstr "For now, we have three demos to show you:"

#: ../../index.rst:112
#, fuzzy
msgid ""
"`Studio <https://studio.iondv.com/index>`_ - специализированная IDE "
"созданная как приложение iondv, для визуальной (no code) разработки "
"приложений на IONDV. Framework. `GitHub Репозиторий "
"<https://github.com/iondv/studio>`_. `Видео инструкция "
"<https://www.youtube.com/watch?v=e201ko9fkQ8>`_ и `текстовая "
"<https://github.com/iondv/nutrition-"
"tickets/blob/master/tutorial/ru/index.md>`_ по созданию приложения при "
"помощи ION. Studio."
msgstr ""
"`Studio <https://studio.iondv.com/index>`_ - is an IONDV. Framework "
"specialized IDE that helps you to speed and simplify the development of "
"applications on the `IONDV. GitHub Repo "
"<https://github.com/iondv/studio>`_. `Tutorial \"How to create an app in "
"IONDV. Studio\"<https://github.com/iondv/nutrition-"
"tickets/blob/master/tutorial/ru/index.md>`_"

#: ../../index.rst:113
#, fuzzy
msgid ""
"`Telecom <https://telecom-ru.iondv.com>`_ - приложение по организации "
"учета, хранения и отображения данных о наличии услуг связи (интернет, "
"сотовая связь, телевидение, почта и др.) в населенных пукнтах региона. "
"`GitHub Repo <https://github.com/iondv/telecom-ru>`_"
msgstr ""
"`Telecom <https://telecom-ru.iondv.com>`_ (in Russian) - is a web "
"application based on IONDV. Framework. It is used as a registry to "
"account, store, and present the data on the availability of communication"
" services (Internet, mobile communications, television, mail, etc.) in "
"populated areas of the region. `GitHub Repo<https://github.com/iondv"
"/telecom-ru>`_"

#: ../../index.rst:115
msgid ""
"`DNT <https://dnt.iondv.com/>`_ - приложение для разработки и "
"тестирования функциональности фреймворка, в котором каждая учетная "
"сущность отражает тим метаданных, например класс \"строка\", или класс "
"\"коллекция\". Это позволяет изучать возможности фреймворка через "
"приложение. `GitHub Репозиторий <github.com/iondv/develop-and-test>`_."
msgstr ""

#: ../../index.rst:116
msgid ""
"`War Archive <https://war-archive.iondv.com/portal/index>`_ - это "
"программное решение на основе IONDV. Framework, реализованное для "
"действующего проекта \"Вспомнить каждого\", цель которого оцифровать "
"архивные документы, внести информацию в базу и обеспечить к ним свободный"
" доступ. `GitHub Репозиторий <https://github.com/iondv/war-archive>`_."
msgstr ""
"`War Archive`_ (in Russian) - is the IONDV. Framework web-application "
"designed to store, group and demonstrate the data based on archival "
"documents about Great Patriotic War (World War II). `GitHub Repo`_."

#: ../../index.rst:117
#, fuzzy
msgid ""
"`Project Management <https://pm-gov-ru.iondv.com>`_ - приложение по  "
"организации проектной деятельности региональных ОГВ , целью которой "
"является контроль результатов, соблюдение и сокращение сроков их "
"достижения, эффективное использование временных, человеческих и "
"финансовых ресурсов, принятие своевременных и обоснованных управленческих"
" решений. `GitHub Repo <https://github.com/iondv/pm-gov-ru>`_"
msgstr ""
"`Project Management <https://pm-gov-ru.iondv.com>`_ (in Russian) - is a "
"web enterprise application based on IONDV. Framework. Project management "
"system allows you to organize project activities: to monitor the results,"
" to comply with and reduce the deadlines, to use effectively temporary, "
"human and financial resources, making timely and informed management "
"decisions. `GitHub Repo`_"

#: ../../index.rst:118
msgid "CRM - *скоро на GitHub*."
msgstr "CRM - coming soon on GitHub."

#: ../../index.rst:120
msgid "Логин для доступа - demo, пароль - ion-demo. Регистрация не требуется."
msgstr ""
"The login for access is - demo and the password is - ion-demo. No "
"registration required."

#: ../../index.rst:123
msgid "Типичные приложения"
msgstr "Typical applications"

#: ../../index.rst:125
msgid ""
"Фреймворка - конструктор веб-приложений любой специфики, так как "
"преметная область определяется структурой метаданных, описывающих "
"поведение приложение. Например можно создать приложения"
msgstr ""

#: ../../index.rst:128
msgid "CRM - управления отношения с клиентами;"
msgstr ""

#: ../../index.rst:129
#, fuzzy
msgid "учет и управление ресурсов предприятия;"
msgstr "Enterprise Resource Management;"

#: ../../index.rst:130
msgid "автоматизация бизнес-процессов организации и документооборота;"
msgstr ""

#: ../../index.rst:131
msgid "сбор и хранение любых данных, например метрик оборудования (IoT);"
msgstr ""

#: ../../index.rst:132
msgid "представление данных в виде порталов;"
msgstr ""

#: ../../index.rst:133
msgid "REST-API для SPA приложений;"
msgstr ""

#: ../../index.rst:134
msgid "REST-API и бекграунд для мобильных приложений;"
msgstr ""

#: ../../index.rst:137
msgid "Функциональные возможности"
msgstr "Top features"

#: ../../index.rst:139
msgid "**IONDV. Framework** обеспечивает реализацию следующей функциональности:"
msgstr "**IONDV. Framework** provides the following functionality:"

#: ../../index.rst:141
msgid ""
"обеспечение трансляции описательных метаданных в структуру хранения "
"данных в СУБД;"
msgstr "descriptive metadata into the data storage structure in the DBMS;"

#: ../../index.rst:142
msgid "обеспечение функциональности работы с различными СУБД (ORM технологию);"
msgstr "functionality to work with various DBMS (ORM technology);"

#: ../../index.rst:143
msgid ""
"обеспечение авторизации в системе с различными политиками, по умолчанию "
"oath2, с открытым конфигурируемым API для подключения авторизационных "
"модулей библиотеки passport обеспечивает до 500 различных политик "
"авторизации;"
msgstr ""
"authorization in a system with different policies, by default oath2, with"
" an open, configurable API for connecting passport library authorization "
"modules which provides up to 500 different authorization policies;"

#: ../../index.rst:144
msgid ""
"обеспечение безопасности доступа к данным – статической к типам данных, к"
" навигации, к этапам бизнес-процессов, к действиям на форме; динамической"
" – через условия в данных, которым должен соответствовать профиль "
"текущего пользователя (принадлежность к подразделению или организации "
"указанной в объекте, группе или другим условиям); через url; обеспечение "
"исключения в авторизации и безопасности по url или для специального "
"пользователя;"
msgstr ""
"securing access to data - static securing to data types, to navigation, "
"to stages of business processes, to actions on a form; dynamic securing- "
"through the conditions in the data that the profile of the current user "
"must correspond to (belonging to the unit or organization specified in "
"the object, group or other conditions); through url; providing exceptions"
" in authorization and security by url or for a special user;"

#: ../../index.rst:145
msgid ""
"подключение модулей, обеспечивающих дополнительную функциональность и "
"реализуемую через доступ к интерфейсам (API) ядра;"
msgstr ""
"connection of modules providing additional functionality and implemented "
"through access to the kernel interfaces (APIs);"

#: ../../index.rst:146
msgid ""
"обеспечение импорта, экспорта данных в системе, метаданных, безопасности "
"из файлов;"
msgstr ""
"providing import, export of data in the system, metadata, security from "
"files;"

#: ../../index.rst:147
msgid ""
"обеспечение взаимодействия с файловой системой для хранения данных, в том"
" числе с внешними файловыми хранилищами, такими как nextcloud;"
msgstr ""
"providing interaction with the file system for storing data, including "
"external file storages, such as nextcloud;"

#: ../../index.rst:148
msgid "расчет значения с формулами и кэширование этих данных;"
msgstr "calculating values with formulas and caching this data;"

#: ../../index.rst:149
msgid "обеспечение жадной загрузки данных и их фильтрации в связанных коллекциях;"
msgstr "providing eager loading and data filtering in connected collections;"

#: ../../index.rst:150
msgid "кэширование запросов и сессий в memcached, redis;"
msgstr "caching requests and sessions in memcached, redis;"

#: ../../index.rst:151
msgid "выполнение задач по расписанию;"
msgstr "scheduled tasks;"

#: ../../index.rst:152
msgid "уведомление пользователей по событиям."
msgstr "notification of users by events."

#: ../../index.rst:155
#, fuzzy
msgid "Структура фреймворка: ``core + metadata + modules = application``"
msgstr "``core + metadata + modules = application``"

#: ../../index.rst:164
msgid ""
"На рискнуке: - *ioncore* - ядро приложения в виде IONDV. фреймворка - "
"*meta class*, *meta view*, *meta navigation*, *meta workflow*, *meta "
"security* - функциональные метаданные приложения - структуры, "
"представления, навигации, бизнес-процессов и безопасности соответственно "
"- *registry module* - подлкючаемые функциональные модули, например модуль"
" registry для просмотра и редактирования данных Чуть ниже представлены "
"дополнительные типы меты и модули. Они представляют собой дополнительную "
"функциональность и применяются в соответствии с приложением. Зависимости "
"приложения смотрим в файле ``package.json``."
msgstr ""

#: ../../index.rst:170
msgid ""
"Так как приложение - это метаописание его поведения в файлах формата JSON"
" (YAML) и функциональный код и HTML шаблоны расширяющие типовую "
"функциональность - то с ним удобно работать через репозиторий версий git."
" Посмотрите примеры на `Github <https://github.com/search?q=org%3Aiondv"
"+iondv-app&type=Repositories>`_"
msgstr ""

#: ../../index.rst:173
#, fuzzy
msgid ""
"Подробнее о функциональных возможностях фреймворка и его модулей можно "
"узнать `в документации "
"<https://iondv.readthedocs.io/ru/latest/key_features.html>`_."
msgstr ""
"You can find out `more "
"<https://iondv.readthedocs.io/en/latest/key_features.html>`_ about the "
"functionality of the framework and its modules."

#: ../../index.rst:176
msgid "Быстрый старт"
msgstr "Quick start"

#: ../../index.rst:179
msgid ""
"Вы можете посмотреть собранные приложения, развернутые в облаке или "
"получить продукты для изучения другим способом на `сайте фреймворка "
"<https://iondv.com>`_\\ , в том числе:"
msgstr ""
"You can get access to the already built applications deployed on Cloud "
"servers or explore the different ways on the `IONDV.Framework site "
"<https://iondv.com>`_\\, for example:"

#: ../../index.rst:181
#, fuzzy
msgid ""
"инсталятор для операционной системы `Linux <https://github.com/iondv"
"/iondv-app>`_"
msgstr "gitclone with this repository"

#: ../../index.rst:182
#, fuzzy
msgid ""
"клонирование репозитория приложения и установка всех компонентов "
"(инструкция ниже)"
msgstr "installer for linux operating system"

#: ../../index.rst:183
#, fuzzy
msgid ""
"`docker-контейнеры <https://hub.docker.com/u/iondv>`_ с собранными "
"приложениями"
msgstr "docker-container with the already built application"

#: ../../index.rst:186
msgid "Cистемное окружение"
msgstr "Software requirements"

#: ../../index.rst:188
msgid ""
"Запуск фреймворка осуществляется в среде `Node.js "
"<https://nodejs.org/en/>`_ версии 10.x.x."
msgstr ""
"Install `Node.js <https://nodejs.org/en/>`_ runtime and npm package "
"manager to run the IONDV.Framework. Version 10.x.x."

#: ../../index.rst:190
#, fuzzy
msgid ""
"Для хранения данных необходимо установить и запустить `MongoDb "
"<https://www.mongodb.org/>`_ версии старше 3.6."
msgstr ""
"Install and run the `MongoDB <https://www.mongodb.org/>`_ DBMS to store "
"the data. Version 3.6."

#: ../../index.rst:193
msgid "Установщик"
msgstr "Installer"

#: ../../index.rst:195
#, fuzzy
msgid ""
"Для ускорения Вы можете использовать установщик приложений IONDV. "
"Framework `iondv-app <https://github.com/iondv/iondv-app>`_\\ , требующий"
" установленных node, mongodb и git. В ходе установки будет проверены и "
"установлены все остальные зависимости, а также собрано и запущено само "
"приложение."
msgstr ""
"You can use IONDV. Framework `apps installer`_\\, requiring installed "
"node.js, mongodb and git. During the installation, all other dependencies"
" will be checked and installed, and the application itself will be built "
"and run."

#: ../../index.rst:198
msgid "Установка в одну строку:"
msgstr "Install in one command:"

#: ../../index.rst:204
#, fuzzy
msgid ""
"Где параметры для iondv-app ``localhost:27017`` адрес MongoDB, а "
"``develop-and-test`` название приложения. После запуска открыть ссылку "
"'http://localhost:8888', типовая учетная запись бек офиса **demo**\\ , "
"пароль **ion-demo**."
msgstr ""
"Where the parameters for iondv-app ``localhost: 27017`` is the MongoDB "
"address, and ``develop-and-test`` is the name of the application. After "
"starting, open the link 'http://localhost:8888', back office account - "
"**demo**\\, password - **ion-demo**."

#: ../../index.rst:206
#, fuzzy
msgid ""
"Дугой способ заключается в клонировании сборщика - (\\ ``git clone "
"https://github.com/iondv/iondv-app.git``\\ ) и установите приложение с "
"помощью команды ``bash iondv-app -m localhost:27017 develop-and-test``."
msgstr ""
"Also another way is to clone - (\\ ``git clone https://github.com/iondv"
"/iondv-app.git``\\ ) and install the application using the command ``bash"
" iondv-app -m localhost:27017 develop-and-test``."

#: ../../index.rst:208
msgid ""
"Можно также собрать приложение в докер конейтнерах, тогда из окружения "
"нужен только docker и СУБД mongodb в докер контейнере. Подробнее на "
"странице сборщика приложения  IONDV. Framework `iondv-app "
"<https://github.com/iondv/iondv-app>`_"
msgstr ""
"You can also build the application in docker containers, then from the "
"environment you only need docker and the mongodb DBMS in the docker "
"container. More details on the IONDV. Framework application builder page "
"`iondv-app <https://github.com/iondv/iondv-app>`_"

#: ../../index.rst:211
msgid "Сборка приложения из репозитория"
msgstr "Gitclone with repository"

#: ../../index.rst:213
msgid "Глобальные зависимости"
msgstr "Global dependencies"

#: ../../index.rst:215
msgid ""
"Для сборки компонентов и библиотек фреймворка необходимо установить "
"глобально:"
msgstr ""
"To build all components and libraries, you need to install the following "
"components globally:"

#: ../../index.rst:217
msgid ""
"пакет `node-gyp <https://github.com/nodejs/node-gyp>`_ ``npm install -g "
"node-gyp``. Для работы библиотеки под операционной системой семейства "
"windows дополнительно необходимо установить пакет windows-build-tools "
"``npm install -g --production windows-build-tools``."
msgstr ""
"package `node-gyp <https://github.com/nodejs/node-gyp>`_ ``npm install -g"
" node-gyp``. For the Windows operating system, it is additionally "
"necessary to install the windows-build-tools package ``npm install -g "
"--production windows-build-tools``."

#: ../../index.rst:218
msgid ""
"пакет сборщика проектов `Gulp <http://gulpjs.com/>`_ ``npm install -g "
"gulp@4.0``. ``4.0`` - поддерживаемая версия ``Gulp``."
msgstr ""
"`Gulp <http://gulpjs.com/>`_installation package ``npm install -g "
"gulp@4.0``. ``4.0`` - supported version of ``Gulp``."

#: ../../index.rst:219
#, fuzzy
msgid ""
"для версий IONDV. Framework 3.x.x и более ранних нужен менджер пакетов "
"фронтенд библиотек `Bower <https://bower.io>`_ ``npm install -g bower``. "
"Для версия 4.х.х и старше не требуется."
msgstr ""
"package manager of frontend libraries `Bower<https://bower.io>`_ ``npm "
"install -g bower``."

#: ../../index.rst:222
#, fuzzy
msgid "Ручная установка ядра, модулей и приложения"
msgstr "Core, modules and application"

#: ../../index.rst:224
#, fuzzy
msgid ""
"Рассматриваем на примере приложения ``develop-and-test``. Находим "
"приложение ``develop-and-test`` в репозитории. Смотрим зависимости "
"указаные в файле ``package.json``."
msgstr ""
"Let's consider the example of the ``develop-and-test`` application. At "
"the place of the ``develop-and-test`` application, the path may indicate "
"``namespace``. This means that you must put the name of the application "
"in the path yourself, instead of ``namespace``. Find the ``develop-and-"
"test`` application in the repository. Look at the dependencies specified "
"in the ``package.json``."

#: ../../index.rst:248
#, fuzzy
msgid ""
"Начинаем установку с ядра, версия которого указана в парметре "
"``\"engines\": {\"ion\": \"1.24.1\"}``. Скопируйте адрес репозитория ядра"
" и в командной строке выполните комманду ``git clone "
"https://github.com/iondv/framework``. Перейдите в папку ядра, "
"переключитесь на tag номера версии ``git checkout tags/v1.24.1``.  Так "
"как совместимость обеспечивается на уровне метаданных, а новые версии "
"выпускались из-за изменения технологии сборки, то вы можете использовать "
"последнии, например 4.0.0."
msgstr ""
"Install the core, its version is specified in the ``\"engines\": "
"{\"ion\": \"3.0.0\"}`` parameter. Copy the URL of the core repository and"
" execute the command ``git clone https://github.com/iondv/framework.git "
"dnt``, where dnt is a application name, for example full path is "
"/workspace/dnt'. Go to the core folder and switch the tag of the version "
"number ``git checkout tags/3.0.0``."

#: ../../index.rst:249
#, fuzzy
msgid ""
"После этого устанавливаются необходимые для приложения модули, указанные "
"в параметре ``\"ionModulesDependencies\"``. Модули устанавливаются в "
"папку ``modules`` ядра, для этого перейдите в неё командой ``cd "
"modules``. Клонируем модули из списка ``\"ionModulesDependencies\"``, для"
" модуля registry это осуществляется коммандой ``git clone "
"https://github.com/iondv/registry``. Перейдите в папку установленного "
"модуля, переключитесь на tag номера версии ``git checkout tags/v1.27.1``."
" Повторите для каждого модуля. Для большинства приложений, можно "
"использовать последние совместимые с ядром модули."
msgstr ""
"Further, install the modules listed in the``\"ionModulesDependencies\"`` "
"parameter. Navigate to the ``module`` folder executing the ``cd modules``"
" command. Clone modules from the ``\"ionModulesDependencies\"`` list, for"
" the registry module the command is ``git clone "
"https://github.com/iondv/registry.git``. Go to the folder of the "
"installed module and switch the tag of the version number ``git checkout "
"tags/3.0.0``. Repeat for each module."

#: ../../index.rst:250
#, fuzzy
msgid ""
"Установка самого приложения осуществляется в папку ``applications``, для "
"этого перейдите в неё командой  ``cd ..\\applications``, если вы "
"находитесь в папке модулей. Установку выполните клонированием репозитория"
" коммандой ``git clone https://github.com/iondv/dnt_ru``."
msgstr ""
"To install the application, go to the ``application`` folder executing "
"the ``cd ..\\applications`` command, if you're in the module folder. "
"Clone the path to repository by ``git clone https://github.com/iondv"
"/develop-and-test.git`` command. Go to the folder of installed "
"application and switch the tag of the version number ``git checkout "
"tags/2.0.0``"

#: ../../index.rst:251
msgid ""
"После этого установите дополнительно необходимые приложения из параметра "
"``\"ionMetaDependencies\"``. Установка осуществляется в папку "
"``applications``, для установки необходимо убедиться, что находитесь в "
"папке приложений. Клонируем приложения из списка в параметре  "
"``\"ionMetaDependencies\"``, для приложения ``viewlib`` осуществляется "
"командой ``https://github.com/iondv/viewlib``.  Перейдите в папку "
"установленного приложения, переключитесь на tag номера версии ``git "
"checkout tags/v0.9.1``. Повторите для каждого приложения."
msgstr ""
"Finally, install all necessary applications listed in the "
"``\"ionMetaDependencies\"`` parameter in the ``applications`` folder. "
"Make sure that you're inside this folder. Clone the dependencies in "
"``ionMetaDependencies``, in particularly ``viewlib`` - a additional "
"application - library of views templates. Execute the ``git clone "
"https://github.com/iondv/viewlib.git`` to clone to the applications "
"folder. Go to the folder of installed application and switch to the tag "
"of the version number ``git checkout tags/0.9.1``. Repeat for each "
"application."

#: ../../index.rst:254
msgid "Сборка, конфигурирование и развертывание приложения"
msgstr "Building, configuring and deploying the application"

#: ../../index.rst:256
msgid ""
"Сборка приложения обеспечивает установку всех зависимых библиотек, импорт"
" данных в базу данных и подготовку приложения для запуска."
msgstr ""
"Building the application provides installation of all dependent "
"libraries, importing data into the database and preparing the application"
" for launch."

#: ../../index.rst:258
#, fuzzy
msgid ""
"Создайте конфигурационный файл ``setup.ini``  в папке ``config`` куда вы "
"клонировали фреймворк для задания основных параметров окружения "
"приложения."
msgstr ""
"Create the configuration file ``setup.ini`` in the ``/config`` folder of "
"the core to set the main parameters of the application environment."

#: ../../index.rst:270
msgid ""
"Открываем файл в редакторе и вставляем содержимое. Самый главный параметр"
" ``db.uri=mongodb://127.0.0.1:27017/ion-dnt`` он указывает на название "
"базы которую мы будем использовать для приложения. База данных будет "
"создана автоматически."
msgstr ""
"Open the file and paste the text above. The main parameter is "
"``db.uri=mongodb://127.0.0.1:27017/iondv-dnt-db``. It shows the base name"
" that we use for the application. The DB will be created automatically."

#: ../../index.rst:272
#, fuzzy
msgid ""
"Задайте переменную окружения NODE_PATH равной пути к ядру приложения "
"следующей командой ``set NODE_PATH=c:\\workspace\\dnt`` для Windows и "
"``export NODE_PATH=/workspace/dnt`` для Linux, где ``workspace\\dnt`` - "
"папка куда склонирован фреймворк."
msgstr ""
"Set the ``NODE_PATH`` environment variable which is equal to the path of "
"the application core. For Windows the command is set "
"``NODE_PATH=c:\\workspace\\dnt``, for Linux - ``export "
"NODE_PATH=/workspace/dnt``, where ``/workspace/dnt`` is the directory of "
"the application."

#: ../../index.rst:274
#, fuzzy
msgid ""
"При первом запуске необходимо выполнить ``npm install`` - она поставит "
"ключевые зависимости, в том числе локально сборщик ``gulp``."
msgstr ""
"The ``npm install`` installs all key dependencies, including locally the "
"``gulp`` build-tool. Please make sure that the ``Gulp`` version - is "
"``4.0``."

#: ../../index.rst:276
msgid "Далее выполните команду сборки приложения ``gulp assemble``."
msgstr ""
"Further, execute the gulp assemble command to build and deploy the "
"application."

#: ../../index.rst:278
#, fuzzy
msgid ""
"Если вы хотите выполнить импорт данных в вашем проекте, проверьте папку "
"``data`` в приложении и выполните команду: ``node bin/import-data --src "
"./applications/develop-and-test/data --ns develop-and-test``"
msgstr ""
"If you want to import data into your project, check the demo ``data`` in "
"the data folder of the application and run the command: ``node bin"
"/import-data --src ./applications/develop-and-test --ns develop-and-"
"test``"

#: ../../index.rst:281
msgid ""
"Добавьте пользователя admin с паролем 123 командой ``node bin\\adduser.js"
" --name admin --pwd 123``."
msgstr ""
"Add the admin user with the 123 password executing the ``node "
"bin/adduser.js --name admin --pwd 123`` command."

#: ../../index.rst:283
msgid ""
"Добавьте пользователю права администратора командой ``node bin/acl.js --u"
" admin@local --role admin --p full``."
msgstr ""
"Add admin rights to the user executing the ``node bin/acl.js --u "
"admin@local --role admin --p full`` command."

#: ../../index.rst:286
msgid "Запуск"
msgstr "Running"

#: ../../index.rst:288
#, fuzzy
msgid ""
"Запустите приложение командой в папке ядра ``npm start`` или ``node "
"bin\\www``."
msgstr "Run the app, executing the ``npm start`` or ``node bin/www`` command."

#: ../../index.rst:290
msgid ""
"Откройте браузер с адресом ``http://localhost:8888`` и авторизуйтесь в "
"приложении, где ``8888`` - порт указанный в параметре server.ports "
"конфигурации запуска."
msgstr ""
"Open this link ``http://localhost:8888`` in a browser and log in. 8888 — "
"is a port in the server.ports parameter."

#: ../../index.rst:293
msgid "Docker"
msgstr "Docker"

#: ../../index.rst:295
msgid "Запуск приложения с использованием докер контейнера:"
msgstr ""
"Follow these steps to deploy docker container on the example of the "
"develop-and-test application:"

#: ../../index.rst:298
msgid ""
"Запустите СУБД mongodb: ``docker run --name mongodb -v "
"mongodb_data:/data/db -p 27017:27017 -d mongo``"
msgstr ""
"Run mongodb DBMS: ``docker run --name mongodb -v mongodb_data:/data/db -p"
" 27017:27017 -d mongo``"

#: ../../index.rst:299
msgid ""
"Запустите IONDV. develop-and-test  ``docker run -d -p 80:8888 --link "
"mongodb iondv/develop-and-test``."
msgstr ""
"Run IONDV. develop-and-test ``docker run -d -p 80:8888 --link mongodb "
"iondv/dnt``."

#: ../../index.rst:300
#, fuzzy
msgid ""
"Откройте ссылку ``http://localhost`` в браузере через минуту (время "
"требуется для инициализации данных). Для авторизации используйте типовой "
"логин: **demo**\\ , пароль: **ion-demo**"
msgstr ""
"Open the ``http://localhost`` link in the browser in a minute (it takes "
"time to initialize the data). For back office login: **demo**\\, "
"password: **ion-demo**"

#: ../../index.rst:303
msgid "Документация"
msgstr "Documentation"

#: ../../index.rst:305
msgid ""
"Документация по платформе IONDV.Framework доступна на двух языках  - "
"`русский <https://iondv.readthedocs.io/ru/latest/index.html>`_ и `english"
" <https://iondv.readthedocs.io/en/latest/index.html>`_."
msgstr ""
"The IONDV.Framework documentation is available in two languages — "
"`english <https://iondv.readthedocs.io/en/latest/index.html>`_ and "
"`russian <https://iondv.readthedocs.io/ru/latest/index.html>`_."

#: ../../index.rst:308
msgid "Ссылки"
msgstr "Reference"

#: ../../index.rst:310
msgid ""
"Ниже представлены ссылки на дополнительную информацию по разработке "
"приложений с использованием IONDV.Framework."
msgstr ""
"Some handy links to learn more information on developing applications "
"using IONDV.Framework."

#: ../../index.rst:312
msgid "`Документация <https://iondv.readthedocs.io/ru/latest/index.html>`_"
msgstr "`Documentations https://iondv.readthedocs.io/en/latest/index.html>`_"

#: ../../index.rst:313
msgid "`Домашняя страница фреймворка <https://iondv.com/>`_"
msgstr "`Homepage <https://iondv.com/>`_"

#: ../../index.rst:314
msgid "Обратная связь на `Facebook <https://www.facebook.com/iondv/>`_"
msgstr "Feedback on `Facebook <https://www.facebook.com/iondv/>`_"

#: ../../index.rst:315
msgid ""
"Обучающие видеоролики на `youtube <https://www.youtube.com/channel"
"/UC_r2CGcOTfuV-7AXl6MwOqw>`_"
msgstr ""

#: ../../index.rst:321
msgid ""
"`License <https://github.com/iondv/framework/blob/master/LICENSE>`_"
"                              `Contact us "
"<https://iondv.com/portal/contacts>`_                              "
"`English <https://iondv.readthedocs.io/en/latest/index.html>`_"
msgstr ""
"`License <https://github.com/iondv/framework/blob/master/LICENSE>`_"
"                              `Contact us "
"<https://iondv.com/portal/contacts>`_                              "
"`English <https://iondv.readthedocs.io/en/latest/index.html>`_"

#: ../../index.rst:323
#, fuzzy
msgid ""
"Copyright (c) 2016-2020 **LLC \"ION DV\"**.\\ :raw-html-m2r:`<br>` All "
"rights reserved."
msgstr ""
"Copyright (c) 2018 **LLC \"ION DV\"**.\\ :raw-html-m2r:`<br>` All rights "
"reserved."

#~ msgid ""
#~ "IONDV. Framework - это опенсорный "
#~ "фреймворк на node.js для разработки "
#~ "учетных приложений или микросервисов на "
#~ "основе метаданных и отдельных модулей. "
#~ "Он является частью инструментальной цифровой"
#~ " платформы для создания enterprise (ERP)"
#~ " приложений состоящей из опенсорсных "
#~ "компонентов: самого `фреймворка "
#~ "<https://github.com/iondv/framework>`_\\ , `модулей "
#~ "<https://github.com/topics/iondv-module>`_ и готовых"
#~ " приложений расширяющих его функциональность, "
#~ "визуальной среды `Studio "
#~ "<https://github.com/iondv/studio>`_ для разработки "
#~ "метаданных приложений."
#~ msgstr ""
#~ "IONDV. Framework - is a node.js "
#~ "open source framework for developing "
#~ "accounting applications or microservices based"
#~ " on metadata and individual modules. "
#~ "Framework is a part of instrumental "
#~ "digital platform to create enterprise "
#~ "(ERP) apps. This platform consists of"
#~ " the following open-source components: "
#~ "the `IONDV. "
#~ "Framework<https://github.com/iondv/framework>`_\\, the "
#~ "`modules <https://github.com/topics/iondv-module>`_ "
#~ "and ready-made applications expanding it"
#~ " functionality, visual development environment"
#~ " `Studio <https://github.com/iondv/studio>`_ to "
#~ "create metadata for the app."

#~ msgid ""
#~ "**IONDV. Framework** — это инструмент "
#~ "для создания веб-приложений, на основе "
#~ "метаданных без программирования. Можно "
#~ "изменять и дополнять систему с помощью"
#~ " наращивания дополнительной функциональности в"
#~ " виде модулей. Есть готовые модули, "
#~ "но ничто не ограничевает вас создать "
#~ "свои собственные и персонализировать "
#~ "приложение."
#~ msgstr ""
#~ "**IONDV. Framework** — is a tool "
#~ "for creating high-level web applications"
#~ " based on metadata. You can change"
#~ " the system by adding the additional"
#~ " components to change functionality. There"
#~ " are ready-made modules, but nothing"
#~ " limits you to create new ones "
#~ "to personalize the application. Moreover, "
#~ "it's low-code framework."

#~ msgid ""
#~ "Основное предназначение - реализация "
#~ "сложносоставных систем реестра данных. Основу"
#~ " функциональности составляет реестр данных "
#~ "— модуль Регистри. Это ключевой модуль,"
#~ " предназначенный непосредственно для работы "
#~ "с данными на основе структур метаданных"
#~ " – в том числе по ведению "
#~ "проектов, программ, мероприятий и др."
#~ msgstr ""
#~ "The main purpose is the implementation"
#~ " of complex data registry systems. "
#~ "The functional base is the data "
#~ "registry - the Registry module. This "
#~ "is a key module designed specifically"
#~ " to work with data based on "
#~ "metadata structures - including the "
#~ "management of projects, programs, activities,"
#~ " etc."

#~ msgid ""
#~ "**IONDV. Framework** это фреймворк с "
#~ "открытым исходным кодом на JavaScript и"
#~ " открытой структурой метаданных в формате"
#~ " JSON."
#~ msgstr ""
#~ "**IONDV. Framework** is an open source"
#~ " software in JavaScript with open "
#~ "metadata structure in human-readable "
#~ "JSON files."

#~ msgid "Как спроектировать приложение?"
#~ msgstr "How to design an application?"

#~ msgid "**Что?** Бизнес-приложение любого класса."
#~ msgstr "**What?** Business application of any class."

#~ msgid ""
#~ "**Как?** Описать данные и примененить "
#~ "готовые модули с возможностью корректировки"
#~ " под конкретные задачи."
#~ msgstr ""
#~ "**How?** Describe the data and apply "
#~ "ready-made modules that you can "
#~ "adjust for specific tasks."

#~ msgid ""
#~ "В квадратных рамках - *ioncore*\\ , "
#~ "*meta class*\\ , *meta view*\\ , "
#~ "*meta navigation* и *registry module* -"
#~ " это база простейшего приложения. Чуть "
#~ "ниже представлены дополнительные типы меты "
#~ "и модули. Они представляют собой "
#~ "дополнительную функциональность и применяются "
#~ "в соответствии с приложением. Зависимости "
#~ "приложения смотрим в файле ``package.json``."
#~ msgstr ""
#~ "In the square frames - *ioncore*\\, "
#~ "*meta class*\\, *meta view*\\, *meta "
#~ "navigation* и *registry module* - are"
#~ " the base of the simplest "
#~ "application. Below are additional types "
#~ "of meta and modules. They represent "
#~ "additional functionality and could be "
#~ "applied in accordance with the "
#~ "application. Look for the application "
#~ "dependencies in the ``package.json`` file."

#~ msgid ""
#~ "Каркас для создания приложений, как "
#~ "уровня предприятия, так и узкофункциональных"
#~ " - от портала до аналитики:"
#~ msgstr ""
#~ "We give you a frame for creating"
#~ " applications in JavaScript, both "
#~ "enterprise level and highly functional -"
#~ " from the portal to analytics:"

#~ msgid "Управление документами;"
#~ msgstr "Document Management;"

#~ msgid "Бухгалтерский учет и отчетность;"
#~ msgstr "Accounting and Reporting;"

#~ msgid "Управление рабочим процессом и проектной деятельностью;"
#~ msgstr "Workflow Management and Project Activities;"

#~ msgid "Сбор данных;"
#~ msgstr "Data Capture;"

#~ msgid "Бизнес-аналитика;"
#~ msgstr "Business Analytics;"

#~ msgid "Системная интеграция."
#~ msgstr "System Integration."

#~ msgid ""
#~ "`DNT <https://dnt.iondv.com/auth>`_ - наше "
#~ "приложение для разработки и тестирования, "
#~ "на основе которого внедряются и "
#~ "тестируются новые метакомпоненты. Практически "
#~ "все элементы системы находятся в "
#~ "приложении DNT.\\ `GitHub Репозиторий "
#~ "<github.com/iondv/develop-and-test>`_."
#~ msgstr ""
#~ "`DNT <https://dnt.iondv.com/auth>`_ - is our"
#~ " application for development and testing,"
#~ " on the basis of which new meta"
#~ " components are implemented and tested. "
#~ "So almost all elements of the "
#~ "system are in the DNT app. \\ "
#~ "`GitHub Repo <github.com/iondv/develop-and-"
#~ "test>`_."

#~ msgid "архив с собранным приложением"
#~ msgstr "archive with the already built application"

