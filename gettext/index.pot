# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2020, IONDV LLC and the IONDV community (Apache 2.0)
# This file is distributed under the same license as the IONDV Framework docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: IONDV Framework docs latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-02-19 19:15+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../docs-ru/index.rst:9
#: ../docs-ru/index.rst:9
msgid "Содержание:"
msgstr ""

#: ../docs-ru/index.rst:7
msgid "Документация по платформе IONDV.Framework"
msgstr ""

#: ../docs-ru/index.rst:78
msgid "This page in `English <https://iondv.readthedocs.io/en/latest>`_"
msgstr ""

#: ../docs-ru/index.rst:88
msgid "IONDV. Framework"
msgstr ""

#: ../docs-ru/index.rst:91
msgid "Описание"
msgstr ""

#: ../docs-ru/index.rst:93
msgid "IONDV. Framework - это опенсорный фреймворк на node.js для разработки учетных приложений на основе метаданных в формате JSON/YAML и отдельных функциональных модулей. Визуальный редактор `Studio <https://studio.iondv.com>`_ позволяет создавать приложения по технологии \"no code\" и собирать приложение с веб-сервисами REST-API (модуль `rest <https://github.com/iondv/rest>`_). Ключевой модуль `registry <https://github.com/iondv/registry>`_ является универсальным средством представления и редактирования данных, обработки их по бизнес-процессам."
msgstr ""

#: ../docs-ru/index.rst:99
msgid "На видео технология разработки и сборки приложения."
msgstr ""

#: ../docs-ru/index.rst:109
msgid "Бесплатные демоверсии"
msgstr ""

#: ../docs-ru/index.rst:111
msgid "Посмотрите наши демо уже сейчас:"
msgstr ""

#: ../docs-ru/index.rst:113
msgid "`Studio <https://studio.iondv.com/index>`_ - специализированная IDE созданная как приложение iondv, для визуальной (no code) разработки приложений на IONDV. Framework. `GitHub Репозиторий <https://github.com/iondv/studio>`_. `Видео инструкция <https://www.youtube.com/watch?v=e201ko9fkQ8>`_ и `текстовая <https://github.com/iondv/nutrition-tickets/blob/master/tutorial/ru/index.md>`_ по созданию приложения при помощи ION. Studio."
msgstr ""

#: ../docs-ru/index.rst:114
msgid "`Telecom <https://telecom-ru.iondv.com>`_ - приложение по организации учета, хранения и отображения данных о наличии услуг связи (интернет, сотовая связь, телевидение, почта и др.) в населенных пукнтах региона. `GitHub Repo <https://github.com/iondv/telecom-ru>`_"
msgstr ""

#: ../docs-ru/index.rst:116
msgid "`DNT <https://dnt.iondv.com/>`_ - приложение для разработки и тестирования функциональности фреймворка, в котором каждая учетная сущность отражает тим метаданных, например класс \"строка\", или класс \"коллекция\". Это позволяет изучать возможности фреймворка через приложение. `GitHub Репозиторий <github.com/iondv/develop-and-test>`_."
msgstr ""

#: ../docs-ru/index.rst:117
msgid "`War Archive <https://war-archive.iondv.com/portal/index>`_ - это программное решение на основе IONDV. Framework, реализованное для действующего проекта \"Вспомнить каждого\", цель которого оцифровать архивные документы, внести информацию в базу и обеспечить к ним свободный доступ. `GitHub Репозиторий <https://github.com/iondv/war-archive>`_."
msgstr ""

#: ../docs-ru/index.rst:118
msgid "`Project Management <https://pm-gov-ru.iondv.com>`_ - приложение по  организации проектной деятельности региональных ОГВ , целью которой является контроль результатов, соблюдение и сокращение сроков их достижения, эффективное использование временных, человеческих и финансовых ресурсов, принятие своевременных и обоснованных управленческих решений. `GitHub Repo <https://github.com/iondv/pm-gov-ru>`_"
msgstr ""

#: ../docs-ru/index.rst:119
msgid "CRM - *скоро на GitHub*."
msgstr ""

#: ../docs-ru/index.rst:121
msgid "Логин для доступа - demo, пароль - ion-demo. Регистрация не требуется."
msgstr ""

#: ../docs-ru/index.rst:124
msgid "Типичные приложения"
msgstr ""

#: ../docs-ru/index.rst:126
msgid "Фреймворк - конструктор веб-приложений любой специфики, так как преметная область определяется структурой метаданных, описывающих поведение приложение. Например можно создать приложения"
msgstr ""

#: ../docs-ru/index.rst:129
msgid "CRM - управления отношения с клиентами;"
msgstr ""

#: ../docs-ru/index.rst:130
msgid "учет и управление ресурсов предприятия;"
msgstr ""

#: ../docs-ru/index.rst:131
msgid "автоматизация бизнес-процессов организации и документооборота;"
msgstr ""

#: ../docs-ru/index.rst:132
msgid "сбор и хранение любых данных, например метрик оборудования (IoT);"
msgstr ""

#: ../docs-ru/index.rst:133
msgid "представление данных в виде порталов;"
msgstr ""

#: ../docs-ru/index.rst:134
msgid "REST-API для SPA приложений;"
msgstr ""

#: ../docs-ru/index.rst:135
msgid "REST-API и бекграунд для мобильных приложений;"
msgstr ""

#: ../docs-ru/index.rst:138
msgid "Функциональные возможности"
msgstr ""

#: ../docs-ru/index.rst:140
msgid "**IONDV. Framework** обеспечивает реализацию следующей функциональности:"
msgstr ""

#: ../docs-ru/index.rst:142
msgid "обеспечение трансляции описательных метаданных в структуру хранения данных в СУБД;"
msgstr ""

#: ../docs-ru/index.rst:143
msgid "обеспечение функциональности работы с различными СУБД (ORM технологию);"
msgstr ""

#: ../docs-ru/index.rst:144
msgid "обеспечение авторизации в системе с различными политиками, по умолчанию oath2, с открытым конфигурируемым API для подключения авторизационных модулей библиотеки passport обеспечивает до 500 различных политик авторизации;"
msgstr ""

#: ../docs-ru/index.rst:145
msgid "обеспечение безопасности доступа к данным – статической к типам данных, к навигации, к этапам бизнес-процессов, к действиям на форме; динамической – через условия в данных, которым должен соответствовать профиль текущего пользователя (принадлежность к подразделению или организации указанной в объекте, группе или другим условиям); через url; обеспечение исключения в авторизации и безопасности по url или для специального пользователя;"
msgstr ""

#: ../docs-ru/index.rst:146
msgid "подключение модулей, обеспечивающих дополнительную функциональность и реализуемую через доступ к интерфейсам (API) ядра;"
msgstr ""

#: ../docs-ru/index.rst:147
msgid "обеспечение импорта, экспорта данных в системе, метаданных, безопасности из файлов;"
msgstr ""

#: ../docs-ru/index.rst:148
msgid "обеспечение взаимодействия с файловой системой для хранения данных, в том числе с внешними файловыми хранилищами, такими как nextcloud;"
msgstr ""

#: ../docs-ru/index.rst:149
msgid "расчет значения с формулами и кэширование этих данных;"
msgstr ""

#: ../docs-ru/index.rst:150
msgid "обеспечение жадной загрузки данных и их фильтрации в связанных коллекциях;"
msgstr ""

#: ../docs-ru/index.rst:151
msgid "кэширование запросов и сессий в memcached, redis;"
msgstr ""

#: ../docs-ru/index.rst:152
msgid "выполнение задач по расписанию;"
msgstr ""

#: ../docs-ru/index.rst:153
msgid "уведомление пользователей по событиям."
msgstr ""

#: ../docs-ru/index.rst:156
msgid "Структура фреймворка: ``core + metadata + modules = application``"
msgstr ""

#: ../docs-ru/index.rst:165
msgid "На рискнуке: - *ioncore* - ядро приложения в виде IONDV. фреймворка - *meta class*, *meta view*, *meta navigation*, *meta workflow*, *meta security* - функциональные метаданные приложения - структуры, представления, навигации, бизнес-процессов и безопасности соответственно - *registry module* - подлкючаемые функциональные модули, например модуль registry для просмотра и редактирования данных Чуть ниже представлены дополнительные типы меты и модули. Они представляют собой дополнительную функциональность и применяются в соответствии с приложением. Зависимости приложения смотрим в файле ``package.json``."
msgstr ""

#: ../docs-ru/index.rst:171
msgid "Так как приложение - это метаописание его поведения в файлах формата JSON (YAML) и функциональный код и HTML шаблоны расширяющие типовую функциональность - то с ним удобно работать через репозиторий версий git. Посмотрите примеры на `Github <https://github.com/search?q=org%3Aiondv+iondv-app&type=Repositories>`_"
msgstr ""

#: ../docs-ru/index.rst:174
msgid "Подробнее о функциональных возможностях фреймворка и его модулей можно узнать :doc:`в документации <key_features>`."
msgstr ""

#: ../docs-ru/index.rst:177
msgid "Быстрый старт"
msgstr ""

#: ../docs-ru/index.rst:179
msgid "Вы можете посмотреть собранные приложения, развернутые в облаке или получить продукты для изучения другим способом на `сайте фреймворка <https://iondv.com>`_\\ , в том числе:"
msgstr ""

#: ../docs-ru/index.rst:181
msgid "инсталятор для операционной системы `Linux <https://github.com/iondv/iondv-app>`_"
msgstr ""

#: ../docs-ru/index.rst:182
msgid "клонирование репозитория приложения и установка всех компонентов (инструкция ниже)"
msgstr ""

#: ../docs-ru/index.rst:183
msgid "`docker-контейнеры <https://hub.docker.com/u/iondv>`_ с собранными приложениями"
msgstr ""

#: ../docs-ru/index.rst:186
msgid "Cистемное окружение"
msgstr ""

#: ../docs-ru/index.rst:188
msgid "Запуск фреймворка осуществляется в среде `Node.js <https://nodejs.org/en/>`_ версии 10.x.x."
msgstr ""

#: ../docs-ru/index.rst:190
msgid "Для хранения данных необходимо установить и запустить `MongoDb <https://www.mongodb.org/>`_ версии старше 3.6."
msgstr ""

#: ../docs-ru/index.rst:193
msgid "Установщик"
msgstr ""

#: ../docs-ru/index.rst:195
msgid "Для ускорения Вы можете использовать установщик приложений IONDV. Framework `iondv-app <https://github.com/iondv/iondv-app>`_\\ , требующий установленных node, mongodb и git. В ходе установки будет проверены и установлены все остальные зависимости, а также собрано и запущено само приложение."
msgstr ""

#: ../docs-ru/index.rst:198
msgid "Установка в одну строку:"
msgstr ""

#: ../docs-ru/index.rst:204
msgid "Где параметры для iondv-app ``localhost:27017`` адрес MongoDB, а ``develop-and-test`` название приложения. После запуска открыть ссылку 'http://localhost:8888', типовая учетная запись бек офиса **demo**\\ , пароль **ion-demo**."
msgstr ""

#: ../docs-ru/index.rst:206
msgid "Дугой способ заключается в клонировании сборщика - (\\ ``git clone https://github.com/iondv/iondv-app.git``\\ ) и установите приложение с помощью команды ``bash iondv-app -m localhost:27017 develop-and-test``."
msgstr ""

#: ../docs-ru/index.rst:208
msgid "Можно также собрать приложение в докер конейтнерах, тогда из окружения нужен только docker и СУБД mongodb в докер контейнере. Подробнее на странице сборщика приложения  IONDV. Framework `iondv-app <https://github.com/iondv/iondv-app>`_"
msgstr ""

#: ../docs-ru/index.rst:211
msgid "Сборка приложения из репозитория"
msgstr ""

#: ../docs-ru/index.rst:214
msgid "Глобальные зависимости"
msgstr ""

#: ../docs-ru/index.rst:216
msgid "Для сборки компонентов и библиотек фреймворка необходимо установить глобально:"
msgstr ""

#: ../docs-ru/index.rst:218
msgid "пакет `node-gyp <https://github.com/nodejs/node-gyp>`_ ``npm install -g node-gyp``. Для работы библиотеки под операционной системой семейства windows дополнительно необходимо установить пакет windows-build-tools ``npm install -g --production windows-build-tools``."
msgstr ""

#: ../docs-ru/index.rst:219
msgid "пакет сборщика проектов `Gulp <http://gulpjs.com/>`_ ``npm install -g gulp@4.0``. ``4.0`` - поддерживаемая версия ``Gulp``."
msgstr ""

#: ../docs-ru/index.rst:220
msgid "для версий IONDV. Framework 3.x.x и более ранних нужен менджер пакетов фронтенд библиотек `Bower <https://bower.io>`_ ``npm install -g bower``. Для версия 4.х.х и старше не требуется."
msgstr ""

#: ../docs-ru/index.rst:223
msgid "Ручная установка ядра, модулей и приложения"
msgstr ""

#: ../docs-ru/index.rst:225
msgid "Рассматриваем на примере приложения ``develop-and-test``. Находим приложение ``develop-and-test`` в репозитории. Смотрим зависимости указаные в файле ``package.json``."
msgstr ""

#: ../docs-ru/index.rst:249
msgid "Начинаем установку с ядра, версия которого указана в парметре ``\"engines\": {\"ion\": \"1.24.1\"}``. Скопируйте адрес репозитория ядра и в командной строке выполните комманду ``git clone https://github.com/iondv/framework``. Перейдите в папку ядра, переключитесь на tag номера версии ``git checkout tags/v1.24.1``.  Так как совместимость обеспечивается на уровне метаданных, а новые версии выпускались из-за изменения технологии сборки, то вы можете использовать последнии, например 4.0.0."
msgstr ""

#: ../docs-ru/index.rst:250
msgid "После этого устанавливаются необходимые для приложения модули, указанные в параметре ``\"ionModulesDependencies\"``. Модули устанавливаются в папку ``modules`` ядра, для этого перейдите в неё командой ``cd modules``. Клонируем модули из списка ``\"ionModulesDependencies\"``, для модуля registry это осуществляется коммандой ``git clone https://github.com/iondv/registry``. Перейдите в папку установленного модуля, переключитесь на tag номера версии ``git checkout tags/v1.27.1``. Повторите для каждого модуля. Для большинства приложений, можно использовать последние совместимые с ядром модули."
msgstr ""

#: ../docs-ru/index.rst:251
msgid "Установка самого приложения осуществляется в папку ``applications``, для этого перейдите в неё командой  ``cd ..\\applications``, если вы находитесь в папке модулей. Установку выполните клонированием репозитория коммандой ``git clone https://github.com/iondv/dnt_ru``."
msgstr ""

#: ../docs-ru/index.rst:252
msgid "После этого установите дополнительно необходимые приложения из параметра ``\"ionMetaDependencies\"``. Установка осуществляется в папку ``applications``, для установки необходимо убедиться, что находитесь в папке приложений. Клонируем приложения из списка в параметре  ``\"ionMetaDependencies\"``, для приложения ``viewlib`` осуществляется командой ``https://github.com/iondv/viewlib``.  Перейдите в папку установленного приложения, переключитесь на tag номера версии ``git checkout tags/v0.9.1``. Повторите для каждого приложения."
msgstr ""

#: ../docs-ru/index.rst:255
msgid "Сборка, конфигурирование и развертывание приложения"
msgstr ""

#: ../docs-ru/index.rst:257
msgid "Сборка приложения обеспечивает установку всех зависимых библиотек, импорт данных в базу данных и подготовку приложения для запуска."
msgstr ""

#: ../docs-ru/index.rst:259
msgid "Создайте конфигурационный файл ``setup.ini``  в папке ``config`` куда вы клонировали фреймворк для задания основных параметров окружения приложения."
msgstr ""

#: ../docs-ru/index.rst:271
msgid "Открываем файл в редакторе и вставляем содержимое. Самый главный параметр ``db.uri=mongodb://127.0.0.1:27017/ion-dnt`` он указывает на название базы которую мы будем использовать для приложения. База данных будет создана автоматически."
msgstr ""

#: ../docs-ru/index.rst:273
msgid "Задайте переменную окружения NODE_PATH равной пути к ядру приложения следующей командой ``set NODE_PATH=c:\\workspace\\dnt`` для Windows и ``export NODE_PATH=/workspace/dnt`` для Linux, где ``workspace\\dnt`` - папка куда склонирован фреймворк."
msgstr ""

#: ../docs-ru/index.rst:275
msgid "При первом запуске необходимо выполнить ``npm install`` - она поставит ключевые зависимости, в том числе локально сборщик ``gulp``."
msgstr ""

#: ../docs-ru/index.rst:277
msgid "Далее выполните команду сборки приложения ``gulp assemble``."
msgstr ""

#: ../docs-ru/index.rst:279
msgid "Если вы хотите выполнить импорт данных в вашем проекте, проверьте папку ``data`` в приложении и выполните команду: ``node bin/import-data --src ./applications/develop-and-test/data --ns develop-and-test``"
msgstr ""

#: ../docs-ru/index.rst:282
msgid "Добавьте пользователя admin с паролем 123 командой ``node bin\\adduser.js --name admin --pwd 123``."
msgstr ""

#: ../docs-ru/index.rst:284
msgid "Добавьте пользователю права администратора командой ``node bin/acl.js --u admin@local --role admin --p full``."
msgstr ""

#: ../docs-ru/index.rst:287
msgid "Запуск"
msgstr ""

#: ../docs-ru/index.rst:289
msgid "Запустите приложение командой в папке ядра ``npm start`` или ``node bin\\www``."
msgstr ""

#: ../docs-ru/index.rst:291
msgid "Откройте браузер с адресом ``http://localhost:8888`` и авторизуйтесь в приложении, где ``8888`` - порт указанный в параметре server.ports конфигурации запуска."
msgstr ""

#: ../docs-ru/index.rst:294
msgid "Docker"
msgstr ""

#: ../docs-ru/index.rst:296
msgid "Запуск приложения с использованием докер контейнера:"
msgstr ""

#: ../docs-ru/index.rst:299
msgid "Запустите СУБД mongodb: ``docker run --name mongodb -v mongodb_data:/data/db -p 27017:27017 -d mongo``"
msgstr ""

#: ../docs-ru/index.rst:300
msgid "Запустите IONDV. develop-and-test  ``docker run -d -p 80:8888 --link mongodb iondv/develop-and-test``."
msgstr ""

#: ../docs-ru/index.rst:301
msgid "Откройте ссылку ``http://localhost`` в браузере через минуту (время требуется для инициализации данных). Для авторизации используйте типовой логин: **demo**\\ , пароль: **ion-demo**"
msgstr ""

#: ../docs-ru/index.rst:304
msgid "Документация"
msgstr ""

#: ../docs-ru/index.rst:306
msgid "Документация по платформе IONDV.Framework доступна на двух языках  - `русский <https://iondv.readthedocs.io/ru/latest/index.html>`_ и `english <https://iondv.readthedocs.io/en/latest/index.html>`_."
msgstr ""

#: ../docs-ru/index.rst:309
msgid "Ссылки"
msgstr ""

#: ../docs-ru/index.rst:311
msgid "Ниже представлены ссылки на дополнительную информацию по разработке приложений с использованием IONDV.Framework."
msgstr ""

#: ../docs-ru/index.rst:313
msgid "`Документация <https://iondv.readthedocs.io/ru/latest/index.html>`_"
msgstr ""

#: ../docs-ru/index.rst:314
msgid "`Домашняя страница фреймворка <https://iondv.com/>`_"
msgstr ""

#: ../docs-ru/index.rst:315
msgid "Обратная связь на `Facebook <https://www.facebook.com/iondv/>`_"
msgstr ""

#: ../docs-ru/index.rst:316
msgid "Обучающие видеоролики на `youtube <https://www.youtube.com/channel/UC_r2CGcOTfuV-7AXl6MwOqw>`_"
msgstr ""

#: ../docs-ru/index.rst:322
msgid "`License <https://github.com/iondv/framework/blob/master/LICENSE>`_                              `Contact us <https://iondv.com/portal/contacts>`_                              `English <https://iondv.readthedocs.io/en/latest/index.html>`_"
msgstr ""

#: ../docs-ru/index.rst:324
msgid "Copyright (c) 2016-2020 **LLC \"ION DV\"**.\\ :raw-html-m2r:`<br>` All rights reserved."
msgstr ""
